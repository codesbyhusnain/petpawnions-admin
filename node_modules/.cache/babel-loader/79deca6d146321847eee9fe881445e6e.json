{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/PetEvents/PetEventsColumns.js\";\nimport React, { Component } from \"react\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, InputGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\"; // datatable related plugins\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider, PaginationListStandalone, SizePerPageDropdownStandalone } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport \"./datatables.scss\";\nimport \"./PetEvents.scss\"; // Table data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst products = [];\n\nclass PetEvents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = date => {\n      this.setState({\n        start_date: date\n      });\n    };\n\n    this.handleEnd = date => {\n      this.setState({\n        end_date: date\n      });\n    };\n\n    this.state = {\n      breadcrumbItems: [{\n        title: \"Tables\",\n        link: \"#\"\n      }, {\n        title: \"Data Table\",\n        link: \"#\"\n      }],\n      page: 1,\n      sizePerPage: 10,\n      productData: products,\n      addNew: false,\n      eventID: \"\",\n      title: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      location: \"\",\n      link: \"\",\n      default_date: new Date(),\n      default: false,\n      start_date: new Date(),\n      monthDate: new Date(),\n      yearDate: new Date(),\n      end_date: new Date(),\n      date: new Date()\n    };\n    this.handleDefault = this.handleDefault.bind(this);\n    this.handleAutoClose = this.handleAutoClose.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleMonthChange = this.handleMonthChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n  }\n\n  handleDefault(date) {\n    this.setState({\n      default_date: date\n    });\n  }\n\n  handleAutoClose(date) {\n    this.setState({\n      auto_close: date\n    });\n  }\n\n  handleMonthChange(date) {\n    this.setState({\n      monthDate: date\n    });\n  }\n\n  handleYearChange(date) {\n    this.setState({\n      yearDate: date\n    });\n  }\n\n  render() {\n    const columns = [{\n      dataField: \"eventID\",\n      text: \"Event ID\",\n      sort: true\n    }, {\n      dataField: \"title\",\n      text: \"Title\",\n      sort: false\n    }, {\n      dataField: \"startDate\",\n      text: \"Start Date\",\n      sort: true\n    }, {\n      dataField: \"endDate\",\n      text: \"End Date\",\n      sort: true\n    }, {\n      dataField: \"location\",\n      text: \"Location\",\n      sort: true\n    }, {\n      dataField: \"link\",\n      text: \"Link\",\n      sort: true\n    }, {\n      dataField: \"menu\",\n      isDummyField: true,\n      text: \"Action\",\n      formatter: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"me-3 text-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/#\",\n            onClick: () => {},\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-pencil font-size-18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-trash-can font-size-18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }];\n    const defaultSorted = [{\n      dataField: \"id\",\n      order: \"asc\"\n    }];\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: products.length,\n      // replace later with size(customers),\n      custom: true\n    }; // Select All Button operation\n\n    const selectRow = {\n      mode: \"checkbox\"\n    };\n    const {\n      SearchBar\n    } = Search;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: !this.state.addNew ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            title: \"Pet Events\",\n            breadcrumbItems: this.state.breadcrumbItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(PaginationProvider, {\n                    pagination: paginationFactory(pageOptions),\n                    keyField: \"id\",\n                    columns: columns,\n                    data: this.state.productData,\n                    children: ({\n                      paginationProps,\n                      paginationTableProps\n                    }) => /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                      keyField: \"id\",\n                      columns: columns,\n                      data: this.state.productData,\n                      search: true,\n                      children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          className: \"mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"search-box me-2 mb-2 d-inline-block\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"position-relative\",\n                                children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...toolkitProps.searchProps\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 191,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"search-box chat-search-box\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 194,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 190,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 189,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 188,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"8\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"text-sm-end\",\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"button\",\n                                color: \"success\",\n                                className: \"btn-rounded mb-2 me-2\",\n                                onClick: () => this.setState({\n                                  addNew: true\n                                }),\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"mdi mdi-plus me-1\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 208,\n                                  columnNumber: 41\n                                }, this), \" Add Event\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 200,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 199,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 187,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            xl: \"12\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"table-responsive\",\n                              children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                                keyField: \"id\",\n                                responsive: true,\n                                bordered: false,\n                                striped: false,\n                                defaultSorted: defaultSorted,\n                                selectRow: selectRow,\n                                classes: \"table align-middle table-nowrap\",\n                                headerWrapperClasses: \"thead-light\",\n                                ...toolkitProps.baseProps,\n                                ...paginationTableProps\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 218,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 217,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          className: \"align-items-md-center mt-30\",\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"inner-custom-pagination d-flex\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"d-inline\",\n                              children: /*#__PURE__*/_jsxDEV(SizePerPageDropdownStandalone, { ...paginationProps\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 239,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 238,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"text-md-right ms-auto\",\n                              children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 244,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 243,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-add-events\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Add an Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"eventID\",\n                      label: \"Event ID\",\n                      placeholder: \"Add Event ID\",\n                      type: \"text\",\n                      errorMessage: \"Enter the Event ID\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      onChange: e => this.setState({\n                        eventID: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"title\",\n                      type: \"text\",\n                      label: \"Title\",\n                      placeholder: \"Add Title\",\n                      errorMessage: \"Enter the Title\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      onChange: e => this.setState({\n                        title: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Multiple Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group\",\n                      children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                        className: \"form-control d-block\",\n                        placeholder: \"dd M,yyyy\",\n                        options: {\n                          mode: \"multiple\",\n                          dateFormat: \"Y-m-d\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"location\",\n                      label: \"Location\",\n                      placeholder: \"Add Location\",\n                      type: \"text\",\n                      errorMessage: \"Enter a valid location\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      onChange: e => this.setState({\n                        location: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"url\",\n                      label: \"URL\",\n                      placeholder: \"Add URL\",\n                      type: \"text\",\n                      errorMessage: \"Enter a URL\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      onChange: e => this.setState({\n                        link: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"add-events-button\",\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        color: \"success\",\n                        className: \"me-1\",\n                        onClick: () => {\n                          products.push({\n                            eventID: this.state.eventID,\n                            title: this.state.title,\n                            startDate: this.state.startDate,\n                            endDate: this.state.endDate,\n                            location: this.state.location,\n                            link: this.state.link\n                          });\n                          this.setState({\n                            addNew: false\n                          });\n                        },\n                        children: \"Add Event\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"reset\",\n                        color: \"secondary\",\n                        onClick: () => {\n                          this.setState({\n                            addNew: false\n                          });\n                        },\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PetEvents;","map":{"version":3,"sources":["/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/PetEvents/PetEventsColumns.js"],"names":["React","Component","AvForm","AvField","Row","Col","Card","CardBody","FormGroup","Button","Label","InputGroup","Link","Flatpickr","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","SizePerPageDropdownStandalone","ToolkitProvider","Search","Breadcrumbs","products","PetEvents","constructor","props","handleStart","date","setState","start_date","handleEnd","end_date","state","breadcrumbItems","title","link","page","sizePerPage","productData","addNew","eventID","startDate","endDate","location","default_date","Date","default","monthDate","yearDate","handleDefault","bind","handleAutoClose","handleMonthChange","handleYearChange","auto_close","render","columns","dataField","text","sort","isDummyField","formatter","defaultSorted","order","pageOptions","totalSize","length","custom","selectRow","mode","SearchBar","paginationProps","paginationTableProps","toolkitProps","searchProps","baseProps","required","value","e","target","dateFormat","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  FormGroup,\n  Button,\n  Label,\n  InputGroup,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\n\n// datatable related plugins\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n  PaginationListStandalone,\n  SizePerPageDropdownStandalone,\n} from \"react-bootstrap-table2-paginator\";\n\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport \"./datatables.scss\";\nimport \"./PetEvents.scss\";\n\n// Table data\nconst products = [];\n\nclass PetEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breadcrumbItems: [\n        { title: \"Tables\", link: \"#\" },\n        { title: \"Data Table\", link: \"#\" },\n      ],\n      page: 1,\n      sizePerPage: 10,\n      productData: products,\n      addNew: false,\n      eventID: \"\",\n      title: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      location: \"\",\n      link: \"\",\n      default_date: new Date(),\n      default: false,\n      start_date: new Date(),\n      monthDate: new Date(),\n      yearDate: new Date(),\n      end_date: new Date(),\n      date: new Date(),\n    };\n    this.handleDefault = this.handleDefault.bind(this);\n    this.handleAutoClose = this.handleAutoClose.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleMonthChange = this.handleMonthChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n  }\n\n  handleDefault(date) {\n    this.setState({ default_date: date });\n  }\n  handleAutoClose(date) {\n    this.setState({ auto_close: date });\n  }\n  handleStart = (date) => {\n    this.setState({ start_date: date });\n  };\n  handleEnd = (date) => {\n    this.setState({ end_date: date });\n  };\n  handleMonthChange(date) {\n    this.setState({ monthDate: date });\n  }\n  handleYearChange(date) {\n    this.setState({ yearDate: date });\n  }\n  render() {\n    const columns = [\n      {\n        dataField: \"eventID\",\n        text: \"Event ID\",\n        sort: true,\n      },\n      {\n        dataField: \"title\",\n        text: \"Title\",\n        sort: false,\n      },\n      {\n        dataField: \"startDate\",\n        text: \"Start Date\",\n        sort: true,\n      },\n      {\n        dataField: \"endDate\",\n        text: \"End Date\",\n        sort: true,\n      },\n      {\n        dataField: \"location\",\n        text: \"Location\",\n        sort: true,\n      },\n      {\n        dataField: \"link\",\n        text: \"Link\",\n        sort: true,\n      },\n\n      {\n        dataField: \"menu\",\n        isDummyField: true,\n        text: \"Action\",\n        formatter: () => (\n          <>\n            <Link to=\"#\" className=\"me-3 text-primary\">\n              <a href=\"/#\" onClick={() => {}}>\n                <i className=\"mdi mdi-pencil font-size-18\"></i>\n              </a>\n            </Link>\n            <Link to=\"#\" className=\"text-danger\">\n              <i className=\"mdi mdi-trash-can font-size-18\"></i>\n            </Link>\n          </>\n        ),\n      },\n    ];\n\n    const defaultSorted = [\n      {\n        dataField: \"id\",\n        order: \"asc\",\n      },\n    ];\n\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: products.length, // replace later with size(customers),\n      custom: true,\n    };\n\n    // Select All Button operation\n    const selectRow = {\n      mode: \"checkbox\",\n    };\n\n    const { SearchBar } = Search;\n\n    return (\n      <React.Fragment>\n        <div className=\"page-content\">\n          {!this.state.addNew ? (\n            <div className=\"container-fluid\">\n              <Breadcrumbs\n                title=\"Pet Events\"\n                breadcrumbItems={this.state.breadcrumbItems}\n              />\n\n              <Row>\n                <Col className=\"col-12\">\n                  <Card>\n                    <CardBody>\n                      <PaginationProvider\n                        pagination={paginationFactory(pageOptions)}\n                        keyField=\"id\"\n                        columns={columns}\n                        data={this.state.productData}\n                      >\n                        {({ paginationProps, paginationTableProps }) => (\n                          <ToolkitProvider\n                            keyField=\"id\"\n                            columns={columns}\n                            data={this.state.productData}\n                            search\n                          >\n                            {(toolkitProps) => (\n                              <React.Fragment>\n                                <Row className=\"mb-2\">\n                                  <Col md=\"4\">\n                                    <div className=\"search-box me-2 mb-2 d-inline-block\">\n                                      <div className=\"position-relative\">\n                                        <SearchBar\n                                          {...toolkitProps.searchProps}\n                                        />\n                                        <i className=\"search-box chat-search-box\" />\n                                      </div>\n                                    </div>\n                                  </Col>\n                                  <Col sm=\"8\">\n                                    <div className=\"text-sm-end\">\n                                      <Button\n                                        type=\"button\"\n                                        color=\"success\"\n                                        className=\"btn-rounded mb-2 me-2\"\n                                        onClick={() =>\n                                          this.setState({ addNew: true })\n                                        }\n                                      >\n                                        <i className=\"mdi mdi-plus me-1\" /> Add\n                                        Event\n                                      </Button>\n                                    </div>\n                                  </Col>\n                                </Row>\n\n                                <Row>\n                                  <Col xl=\"12\">\n                                    <div className=\"table-responsive\">\n                                      <BootstrapTable\n                                        keyField={\"id\"}\n                                        responsive\n                                        bordered={false}\n                                        striped={false}\n                                        defaultSorted={defaultSorted}\n                                        selectRow={selectRow}\n                                        classes={\n                                          \"table align-middle table-nowrap\"\n                                        }\n                                        headerWrapperClasses={\"thead-light\"}\n                                        {...toolkitProps.baseProps}\n                                        {...paginationTableProps}\n                                      />\n                                    </div>\n                                  </Col>\n                                </Row>\n\n                                <Row className=\"align-items-md-center mt-30\">\n                                  <Col className=\"inner-custom-pagination d-flex\">\n                                    <div className=\"d-inline\">\n                                      <SizePerPageDropdownStandalone\n                                        {...paginationProps}\n                                      />\n                                    </div>\n                                    <div className=\"text-md-right ms-auto\">\n                                      <PaginationListStandalone\n                                        {...paginationProps}\n                                      />\n                                    </div>\n                                  </Col>\n                                </Row>\n                              </React.Fragment>\n                            )}\n                          </ToolkitProvider>\n                        )}\n                      </PaginationProvider>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          ) : (\n            <div className=\"input-add-events\">\n              <Col lg={6}>\n                <Card>\n                  <CardBody>\n                    <h2>Add an Event</h2>\n\n                    <AvForm>\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"eventID\"\n                          label=\"Event ID\"\n                          placeholder=\"Add Event ID\"\n                          type=\"text\"\n                          errorMessage=\"Enter the Event ID\"\n                          validate={{ required: { value: true } }}\n                          onChange={(e) =>\n                            this.setState({ eventID: e.target.value })\n                          }\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"title\"\n                          type=\"text\"\n                          label=\"Title\"\n                          placeholder=\"Add Title\"\n                          errorMessage=\"Enter the Title\"\n                          validate={{ required: { value: true } }}\n                          onChange={(e) =>\n                            this.setState({ title: e.target.value })\n                          }\n                        />\n                      </div>\n\n                      <div className=\"mb-3\">\n                        <label>Multiple Date</label>\n                        <div className=\"input-group\">\n                          <Flatpickr\n                            className=\"form-control d-block\"\n                            placeholder=\"dd M,yyyy\"\n                            options={{\n                              mode: \"multiple\",\n                              dateFormat: \"Y-m-d\",\n                            }}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"location\"\n                          label=\"Location\"\n                          placeholder=\"Add Location\"\n                          type=\"text\"\n                          errorMessage=\"Enter a valid location\"\n                          validate={{ required: { value: true } }}\n                          onChange={(e) =>\n                            this.setState({ location: e.target.value })\n                          }\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"url\"\n                          label=\"URL\"\n                          placeholder=\"Add URL\"\n                          type=\"text\"\n                          errorMessage=\"Enter a URL\"\n                          validate={{ required: { value: true } }}\n                          onChange={(e) =>\n                            this.setState({ link: e.target.value })\n                          }\n                        />\n                      </div>\n                      <FormGroup className=\"mb-0\">\n                        <div className=\"add-events-button\">\n                          <Button\n                            type=\"submit\"\n                            color=\"success\"\n                            className=\"me-1\"\n                            onClick={() => {\n                              products.push({\n                                eventID: this.state.eventID,\n                                title: this.state.title,\n                                startDate: this.state.startDate,\n                                endDate: this.state.endDate,\n                                location: this.state.location,\n                                link: this.state.link,\n                              });\n                              this.setState({ addNew: false });\n                            }}\n                          >\n                            Add Event\n                          </Button>\n                          <Button\n                            type=\"reset\"\n                            color=\"secondary\"\n                            onClick={() => {\n                              this.setState({ addNew: false });\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                        </div>\n                      </FormGroup>\n                    </AvForm>\n                  </CardBody>\n                </Card>\n              </Col>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PetEvents;\n"]},"metadata":{},"sourceType":"module"}