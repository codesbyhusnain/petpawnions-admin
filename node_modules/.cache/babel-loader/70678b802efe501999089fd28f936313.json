{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/routes/index.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Authentication related pages\n\nimport Login from \"../pages/Authentication/Login\";\nimport Logout from \"../pages/Authentication/Logout\";\nimport Register from \"../pages/Authentication/Register\";\nimport ForgetPwd from \"../pages/Authentication/ForgetPassword\";\nimport AuthLockScreen from \"../pages/Authentication/AuthLockScreen\"; // Dashboard\n\nimport Dashboard from \"../pages/Dashboard/index\"; // Inner Authentication\n\nimport Login1 from \"../pages/AuthenticationInner/Login\";\nimport Register1 from \"../pages/AuthenticationInner/Register\";\nimport ForgetPwd1 from \"../pages/AuthenticationInner/ForgetPassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authProtectedRoutes = [{\n  path: \"/dashboard\",\n  component: Dashboard\n}, // this route should be at the end of all other routes\n{\n  path: \"/\",\n  exact: true,\n  component: () => /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 45\n  }, this)\n}];\nconst publicRoutes = [{\n  path: \"/logout\",\n  component: Logout\n}, {\n  path: \"/login\",\n  component: Login\n}, {\n  path: \"/forgot-password\",\n  component: ForgetPwd\n}, {\n  path: \"/register\",\n  component: Register\n}, {\n  path: \"/lock-screen\",\n  component: AuthLockScreen\n}, // Authentication Inner\n{\n  path: \"/auth-login\",\n  component: Login1\n}, {\n  path: \"/auth-register\",\n  component: Register1\n}, {\n  path: \"/auth-recoverpw\",\n  component: ForgetPwd1\n}];\nexport { authProtectedRoutes, publicRoutes };","map":{"version":3,"sources":["/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/routes/index.js"],"names":["React","Redirect","Login","Logout","Register","ForgetPwd","AuthLockScreen","Dashboard","Login1","Register1","ForgetPwd1","authProtectedRoutes","path","component","exact","publicRoutes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAE3B;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,SAAS,EAAEN;AAAjC,CAF2B,EAI3B;AACA;AAAEK,EAAAA,IAAI,EAAE,GAAR;AAAaE,EAAAA,KAAK,EAAE,IAApB;AAA0BD,EAAAA,SAAS,EAAE,mBAAM,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3C,CAL2B,CAA5B;AAQA,MAAME,YAAY,GAAG,CACpB;AAAEH,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,SAAS,EAAEV;AAA9B,CADoB,EAEpB;AAAES,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,SAAS,EAAEX;AAA7B,CAFoB,EAGpB;AAAEU,EAAAA,IAAI,EAAE,kBAAR;AAA4BC,EAAAA,SAAS,EAAER;AAAvC,CAHoB,EAIpB;AAAEO,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,SAAS,EAAET;AAAhC,CAJoB,EAKpB;AAAEQ,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,SAAS,EAAEP;AAAnC,CALoB,EAOpB;AACA;AAAEM,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,SAAS,EAAEL;AAAlC,CARoB,EASpB;AAAEI,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,SAAS,EAAEJ;AAArC,CAToB,EAUpB;AAAEG,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,SAAS,EAAEH;AAAtC,CAVoB,CAArB;AAcA,SAASC,mBAAT,EAA8BI,YAA9B","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Authentication related pages\r\nimport Login from \"../pages/Authentication/Login\";\r\nimport Logout from \"../pages/Authentication/Logout\";\r\nimport Register from \"../pages/Authentication/Register\";\r\nimport ForgetPwd from \"../pages/Authentication/ForgetPassword\";\r\nimport AuthLockScreen from \"../pages/Authentication/AuthLockScreen\";\r\n\r\n// Dashboard\r\nimport Dashboard from \"../pages/Dashboard/index\";\r\n\r\n// Inner Authentication\r\nimport Login1 from \"../pages/AuthenticationInner/Login\";\r\nimport Register1 from \"../pages/AuthenticationInner/Register\";\r\nimport ForgetPwd1 from \"../pages/AuthenticationInner/ForgetPassword\";\r\n\r\nconst authProtectedRoutes = [\r\n\r\n\t{ path: \"/dashboard\", component: Dashboard },\r\n\r\n\t// this route should be at the end of all other routes\r\n\t{ path: \"/\", exact: true, component: () => <Redirect to=\"/dashboard\" /> }\r\n];\r\n\r\nconst publicRoutes = [\r\n\t{ path: \"/logout\", component: Logout },\r\n\t{ path: \"/login\", component: Login },\r\n\t{ path: \"/forgot-password\", component: ForgetPwd },\r\n\t{ path: \"/register\", component: Register },\r\n\t{ path: \"/lock-screen\", component: AuthLockScreen },\r\n\r\n\t// Authentication Inner\r\n\t{ path: \"/auth-login\", component: Login1 },\r\n\t{ path: \"/auth-register\", component: Register1 },\r\n\t{ path: \"/auth-recoverpw\", component: ForgetPwd1 },\r\n\r\n];\r\n\r\nexport { authProtectedRoutes, publicRoutes };\r\n"]},"metadata":{},"sourceType":"module"}