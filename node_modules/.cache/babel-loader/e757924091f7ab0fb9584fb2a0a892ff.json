{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/PetPlaces/PlacesContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlacesContext = /*#__PURE__*/createContext();\nexport const PetPlacesProvider = props => {\n  _s();\n\n  const getCoinsData = async () => {\n    try {\n      const response = await Axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&per_page=100&page=${activePage}&sparkline=true&price_change_percentage=1h%2C24h%2C7d`);\n      setData(response.data);\n      console.log(data);\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const [places, setPlaces] = useState([{\n    title: \"Pet Place\",\n    address: \"Pet Place Address #1\",\n    lon: \"334567\",\n    lat: \"34563\",\n    openTime: \"3:30\",\n    closeTime: \"4:00\",\n    postal: \"54000\",\n    category: \"Cafe\",\n    phone: \"03246101715\",\n    fb: \"facebook.com\",\n    insta: \"instagram.com\",\n    twitter: \"twitter.com\",\n    email: \"user@email.com\",\n    url: \"url.com\"\n  }]);\n  const [addNew, setAddNew] = useState(false);\n  const [columns, setColumns] = useState([{\n    title: \"Title\"\n  }, {\n    title: \"Address\"\n  }, {\n    title: \"Longitude\"\n  }, {\n    title: \"Latitude\"\n  }, {\n    title: \"Open Time\"\n  }, {\n    title: \"Close Time\"\n  }, {\n    title: \"Postal Code\"\n  }, {\n    title: \"Category\"\n  }, {\n    title: \"Phone\"\n  }, {\n    title: \"Facebook Link\"\n  }, {\n    title: \"Instagram Link\"\n  }, {\n    title: \"Twitter Link\"\n  }, {\n    title: \"Email\"\n  }, {\n    title: \"URL\"\n  }, {\n    title: \"Action\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: {\n      places: [places, setPlaces],\n      addNew: [addNew, setAddNew],\n      columns: [columns, setColumns]\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PetPlacesProvider, \"ksi7pjqQmWmuSHPjCBzgDQ4/yoE=\");\n\n_c = PetPlacesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetPlacesProvider\");","map":{"version":3,"sources":["/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/PetPlaces/PlacesContext.js"],"names":["React","useState","createContext","PlacesContext","PetPlacesProvider","props","getCoinsData","response","Axios","get","activePage","setData","data","console","log","setLoading","e","places","setPlaces","title","address","lon","lat","openTime","closeTime","postal","category","phone","fb","insta","twitter","email","url","addNew","setAddNew","columns","setColumns","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,aAAa,gBAAGD,aAAa,EAAnC;AAEP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CACpB,oFAAmFC,UAAW,uDAD1E,CAAvB;AAGAC,MAAAA,OAAO,CAACJ,QAAQ,CAACK,IAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD;AACF,GAXD;;AAYA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CACnC;AACEkB,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,OAAO,EAAE,sBAFX;AAGEC,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,GAAG,EAAE,OAJP;AAKEC,IAAAA,QAAQ,EAAE,MALZ;AAMEC,IAAAA,SAAS,EAAE,MANb;AAOEC,IAAAA,MAAM,EAAE,OAPV;AAQEC,IAAAA,QAAQ,EAAE,MARZ;AASEC,IAAAA,KAAK,EAAE,aATT;AAUEC,IAAAA,EAAE,EAAE,cAVN;AAWEC,IAAAA,KAAK,EAAE,eAXT;AAYEC,IAAAA,OAAO,EAAE,aAZX;AAaEC,IAAAA,KAAK,EAAE,gBAbT;AAcEC,IAAAA,GAAG,EAAE;AAdP,GADmC,CAAD,CAApC;AAkBA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,CACrC;AACEkB,IAAAA,KAAK,EAAE;AADT,GADqC,EAIrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAJqC,EAOrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAPqC,EAUrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAVqC,EAarC;AACEA,IAAAA,KAAK,EAAE;AADT,GAbqC,EAgBrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAhBqC,EAmBrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAnBqC,EAsBrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAtBqC,EAyBrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAzBqC,EA4BrC;AACEA,IAAAA,KAAK,EAAE;AADT,GA5BqC,EA+BrC;AACEA,IAAAA,KAAK,EAAE;AADT,GA/BqC,EAkCrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAlCqC,EAqCrC;AACEA,IAAAA,KAAK,EAAE;AADT,GArCqC,EAwCrC;AACEA,IAAAA,KAAK,EAAE;AADT,GAxCqC,EA2CrC;AACEA,IAAAA,KAAK,EAAE;AADT,GA3CqC,CAAD,CAAtC;AAgDA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,MAAM,EAAE,CAACA,MAAD,EAASC,SAAT,CADH;AAELe,MAAAA,MAAM,EAAE,CAACA,MAAD,EAASC,SAAT,CAFH;AAGLC,MAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAHJ,KADT;AAAA,cAOG/B,KAAK,CAACgC;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5FM;;GAAMjC,iB;;KAAAA,iB","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const PlacesContext = createContext();\n\nexport const PetPlacesProvider = (props) => {\n  const getCoinsData = async () => {\n    try {\n      const response = await Axios.get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&per_page=100&page=${activePage}&sparkline=true&price_change_percentage=1h%2C24h%2C7d`\n      );\n      setData(response.data);\n      console.log(data);\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const [places, setPlaces] = useState([\n    {\n      title: \"Pet Place\",\n      address: \"Pet Place Address #1\",\n      lon: \"334567\",\n      lat: \"34563\",\n      openTime: \"3:30\",\n      closeTime: \"4:00\",\n      postal: \"54000\",\n      category: \"Cafe\",\n      phone: \"03246101715\",\n      fb: \"facebook.com\",\n      insta: \"instagram.com\",\n      twitter: \"twitter.com\",\n      email: \"user@email.com\",\n      url: \"url.com\",\n    },\n  ]);\n  const [addNew, setAddNew] = useState(false);\n\n  const [columns, setColumns] = useState([\n    {\n      title: \"Title\",\n    },\n    {\n      title: \"Address\",\n    },\n    {\n      title: \"Longitude\",\n    },\n    {\n      title: \"Latitude\",\n    },\n    {\n      title: \"Open Time\",\n    },\n    {\n      title: \"Close Time\",\n    },\n    {\n      title: \"Postal Code\",\n    },\n    {\n      title: \"Category\",\n    },\n    {\n      title: \"Phone\",\n    },\n    {\n      title: \"Facebook Link\",\n    },\n    {\n      title: \"Instagram Link\",\n    },\n    {\n      title: \"Twitter Link\",\n    },\n    {\n      title: \"Email\",\n    },\n    {\n      title: \"URL\",\n    },\n    {\n      title: \"Action\",\n    },\n  ]);\n\n  return (\n    <PlacesContext.Provider\n      value={{\n        places: [places, setPlaces],\n        addNew: [addNew, setAddNew],\n        columns: [columns, setColumns],\n      }}\n    >\n      {props.children}\n    </PlacesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}