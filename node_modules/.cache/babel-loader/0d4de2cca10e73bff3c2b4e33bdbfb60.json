{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/Authentication/ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Alert, Button, Label } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport AdminUserPool from \"./AdminUserPool\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgetPasswordPage = props => {\n  _s();\n\n  const [step, setStep] = useState(0);\n  const [resetEmail, setResetEmail] = useState(\"\");\n  const [otpSuccess, setOtpSuccess] = useState();\n  const [code, setCode] = useState(\"\");\n\n  const sendAdminCode = event => {\n    event.preventDefault();\n    getAdminUser().forgotPassword({\n      onSuccess: data => {\n        console.log(\"Success\");\n      },\n      onFailure: err => {\n        console.log(\"Remeber to delete this failure console log\");\n      },\n      inputVerificationCode: data => {\n        console.log(\"Sent the code\");\n        setStep(1);\n      }\n    });\n  };\n\n  const getAdminUser = () => {\n    return new CognitoUser({\n      Username: resetEmail,\n      Pool: AdminUserPool\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: step === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 mt-5\",\n      children: /*#__PURE__*/_jsxDEV(AvForm, {\n        className: \"form-horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-form-group-custom mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ri-mail-line auti-custom-input-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"useremail\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"useremail\",\n            type: \"email\",\n            validate: {\n              email: true,\n              required: true\n            },\n            className: \"form-control\",\n            id: \"useremail\",\n            placeholder: \"Enter email\",\n            onChange: e => setResetEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            className: \"w-md waves-effect waves-light\",\n            type: \"submit\",\n            onClick: sendAdminCode,\n            children: \"Send Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verify-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify-info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"verify-info\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"We have sent an OTP (One Time Password) to you. Please enter the code below to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), otpSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(UncontrolledAlert, {\n            color: \"success\",\n            className: \"alert-dismissible fade show\",\n            role: \"alert\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-check-all me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), \"OTP Verified! You will be redirected to login!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), setTimeout(() => {\n            setRedirect(true);\n          }, 2000), redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divOuter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divInner\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"resend-code-input\",\n            type: \"text\",\n            maxLength: 6,\n            onChange: e => setCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resend-code\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Resend Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"continue-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"w-md waves-effect waves-light\",\n          type: \"submit\",\n          onClick: confirmSignup,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cancel-button\",\n        onClick: () => {\n          setStep(0);\n        },\n        children: [\" \", \"Cancel\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgetPasswordPage, \"9ANFApxyyJ0n3SJPTeSYGwBr3no=\");\n\n_c = ForgetPasswordPage;\nexport default ForgetPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPasswordPage\");","map":{"version":3,"sources":["/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/Authentication/ForgetPassword.js"],"names":["React","useState","Alert","Button","Label","AvForm","AvField","AdminUserPool","CognitoUser","ForgetPasswordPage","props","step","setStep","resetEmail","setResetEmail","otpSuccess","setOtpSuccess","code","setCode","sendAdminCode","event","preventDefault","getAdminUser","forgotPassword","onSuccess","data","console","log","onFailure","err","inputVerificationCode","Username","Pool","email","required","e","target","value","textAlign","setTimeout","setRedirect","redirect","confirmSignup"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, Button, Label } from \"reactstrap\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\nimport AdminUserPool from \"./AdminUserPool\";\r\n\r\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\r\n\r\nconst ForgetPasswordPage = (props) => {\r\n  const [step, setStep] = useState(0);\r\n  const [resetEmail, setResetEmail] = useState(\"\");\r\n  const [otpSuccess, setOtpSuccess] = useState();\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const sendAdminCode = (event) => {\r\n    event.preventDefault();\r\n\r\n    getAdminUser().forgotPassword({\r\n      onSuccess: (data) => {\r\n        console.log(\"Success\");\r\n      },\r\n      onFailure: (err) => {\r\n        console.log(\"Remeber to delete this failure console log\");\r\n      },\r\n      inputVerificationCode: (data) => {\r\n        console.log(\"Sent the code\");\r\n        setStep(1);\r\n      },\r\n    });\r\n  };\r\n\r\n  const getAdminUser = () => {\r\n    return new CognitoUser({\r\n      Username: resetEmail,\r\n      Pool: AdminUserPool,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {step === 0 ? (\r\n        <div className=\"p-2 mt-5\">\r\n          <AvForm className=\"form-horizontal\">\r\n            <div className=\"auth-form-group-custom mb-4\">\r\n              <i className=\"ri-mail-line auti-custom-input-icon\"></i>\r\n              <Label htmlFor=\"useremail\">Email</Label>\r\n              <AvField\r\n                name=\"useremail\"\r\n                type=\"email\"\r\n                validate={{ email: true, required: true }}\r\n                className=\"form-control\"\r\n                id=\"useremail\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setResetEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-4 text-center\">\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"w-md waves-effect waves-light\"\r\n                type=\"submit\"\r\n                onClick={sendAdminCode}\r\n              >\r\n                Send Code\r\n              </Button>\r\n            </div>\r\n          </AvForm>\r\n        </div>\r\n      ) : (\r\n        <div className=\"verify-form\">\r\n          <div className=\"verify-info-container\">\r\n            <p className=\"verify-info\" style={{ textAlign: \"center\" }}>\r\n              We have sent an OTP (One Time Password) to you. Please enter the\r\n              code below to continue\r\n            </p>\r\n            {otpSuccess ? (\r\n              <div>\r\n                <UncontrolledAlert\r\n                  color=\"success\"\r\n                  className=\"alert-dismissible fade show\"\r\n                  role=\"alert\"\r\n                >\r\n                  <i className=\"mdi mdi-check-all me-2\"></i>\r\n                  OTP Verified! You will be redirected to login!\r\n                </UncontrolledAlert>\r\n                {setTimeout(() => {\r\n                  setRedirect(true);\r\n                }, 2000)}\r\n                {redirect ? <Redirect to=\"/login\" /> : null}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"divOuter\">\r\n            <div className=\"divInner\">\r\n              <input\r\n                className=\"resend-code-input\"\r\n                type=\"text\"\r\n                maxLength={6}\r\n                onChange={(e) => setCode(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <p className=\"resend-code\" style={{ textAlign: \"center\" }}>\r\n            Resend Code\r\n          </p>\r\n          <div className=\"continue-button\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"w-md waves-effect waves-light\"\r\n              type=\"submit\"\r\n              onClick={confirmSignup}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </div>\r\n          <p\r\n            className=\"cancel-button\"\r\n            onClick={() => {\r\n              setStep(0);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Cancel{\" \"}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordPage;\r\n"]},"metadata":{},"sourceType":"module"}