{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/PetEvents/PetEventsContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventsContext = /*#__PURE__*/createContext();\nexport const PetEventsProvider = props => {\n  _s();\n\n  const [eventsData, setEventsData] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const apiUrl = \"http://18.216.174.90:3000\";\n  const getEventsUrl = `${apiUrl}/api/event`;\n  const loginInfo = {\n    name: \"m.naveedashfaq@gmail.com\",\n    password: \"123456\"\n  };\n  Axios.post(`${apiUrl}/api/auth/login`, loginInfo).then(res => setToken(res.data.accessToken.jwtToken));\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  useEffect(() => {\n    Axios.post(`${apiUrl}/api/auth/login`, loginInfo).then(res => setToken(res.data.accessToken.jwtToken));\n    Axios.get(getEventsUrl, config).then(response => setEventsData(response.data));\n  });\n  const [state, setState] = useState(0);\n  const columns = [{\n    title: \"Title\"\n  }, {\n    title: \"Address\"\n  }, {\n    title: \"Category\"\n  }, {\n    title: \"Start Time\"\n  }, {\n    title: \"End Time\"\n  }, {\n    title: \"Postal Code\"\n  }, {\n    title: \"URL\"\n  }, {\n    title: \"Action\"\n  }];\n  return /*#__PURE__*/_jsxDEV(EventsContext.Provider, {\n    value: {\n      events: [eventsData, setEventsData],\n      state: [state, setState],\n      columns: columns,\n      token: token\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PetEventsProvider, \"t7XZwGyL0BT6BBLdr6r944xds3g=\");\n\n_c = PetEventsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetEventsProvider\");","map":{"version":3,"sources":["/Users/husnainmehmood/Downloads/Nazox_React_v2.0.0/Starterkit/src/pages/PetEvents/PetEventsContext.js"],"names":["React","useState","createContext","useEffect","Axios","EventsContext","PetEventsProvider","props","eventsData","setEventsData","token","setToken","apiUrl","getEventsUrl","loginInfo","name","password","post","then","res","data","accessToken","jwtToken","config","headers","Authorization","get","response","state","setState","columns","title","events","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEP,OAAO,MAAMI,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,MAAM,GAAG,2BAAf;AACA,QAAMC,YAAY,GAAI,GAAED,MAAO,YAA/B;AACA,QAAME,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAE,0BADU;AAEhBC,IAAAA,QAAQ,EAAE;AAFM,GAAlB;AAKAZ,EAAAA,KAAK,CAACa,IAAN,CAAY,GAAEL,MAAO,iBAArB,EAAuCE,SAAvC,EAAkDI,IAAlD,CAAwDC,GAAD,IACrDR,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASC,WAAT,CAAqBC,QAAtB,CADV;AAIA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASf,KAAM;AADxB;AADI,GAAf;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEL,MAAO,iBAArB,EAAuCE,SAAvC,EAAkDI,IAAlD,CAAwDC,GAAD,IACrDR,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASC,WAAT,CAAqBC,QAAtB,CADV;AAGAlB,IAAAA,KAAK,CAACsB,GAAN,CAAUb,YAAV,EAAwBU,MAAxB,EAAgCL,IAAhC,CAAsCS,QAAD,IACnClB,aAAa,CAACkB,QAAQ,CAACP,IAAV,CADf;AAGD,GAPQ,CAAT;AAQA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAM6B,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE;AADT,GADc,EAId;AACEA,IAAAA,KAAK,EAAE;AADT,GAJc,EAOd;AACEA,IAAAA,KAAK,EAAE;AADT,GAPc,EAUd;AACEA,IAAAA,KAAK,EAAE;AADT,GAVc,EAad;AACEA,IAAAA,KAAK,EAAE;AADT,GAbc,EAgBd;AACEA,IAAAA,KAAK,EAAE;AADT,GAhBc,EAmBd;AACEA,IAAAA,KAAK,EAAE;AADT,GAnBc,EAuBd;AACEA,IAAAA,KAAK,EAAE;AADT,GAvBc,CAAhB;AA4BA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,CAACxB,UAAD,EAAaC,aAAb,CADH;AAELmB,MAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAFF;AAGLC,MAAAA,OAAO,EAAEA,OAHJ;AAILpB,MAAAA,KAAK,EAAEA;AAJF,KADT;AAAA,cAQGH,KAAK,CAAC0B;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtEM;;GAAM3B,iB;;KAAAA,iB","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nexport const EventsContext = createContext();\n\nexport const PetEventsProvider = (props) => {\n  const [eventsData, setEventsData] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const apiUrl = \"http://18.216.174.90:3000\";\n  const getEventsUrl = `${apiUrl}/api/event`;\n  const loginInfo = {\n    name: \"m.naveedashfaq@gmail.com\",\n    password: \"123456\",\n  };\n\n  Axios.post(`${apiUrl}/api/auth/login`, loginInfo).then((res) =>\n    setToken(res.data.accessToken.jwtToken)\n  );\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  useEffect(() => {\n    Axios.post(`${apiUrl}/api/auth/login`, loginInfo).then((res) =>\n      setToken(res.data.accessToken.jwtToken)\n    );\n    Axios.get(getEventsUrl, config).then((response) =>\n      setEventsData(response.data)\n    );\n  });\n  const [state, setState] = useState(0);\n\n  const columns = [\n    {\n      title: \"Title\",\n    },\n    {\n      title: \"Address\",\n    },\n    {\n      title: \"Category\",\n    },\n    {\n      title: \"Start Time\",\n    },\n    {\n      title: \"End Time\",\n    },\n    {\n      title: \"Postal Code\",\n    },\n    {\n      title: \"URL\",\n    },\n\n    {\n      title: \"Action\",\n    },\n  ];\n\n  return (\n    <EventsContext.Provider\n      value={{\n        events: [eventsData, setEventsData],\n        state: [state, setState],\n        columns: columns,\n        token: token,\n      }}\n    >\n      {props.children}\n    </EventsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}