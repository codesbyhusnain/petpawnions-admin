{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/src/routes/route.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../AuthContext\";\nimport { AuthProvider } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRoute = ({\n  component: Component,\n  layout: Layout,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authProtected\n  } = useContext(AuthContext);\n  const [isAuthProtected, setIsAuthProtected] = authProtected;\n\n  /*#__PURE__*/\n  _jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuthProtected) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AppRoute, \"Vsh/fLt5bbHf+bY00Pt0Ox7YiWQ=\");\n\n_c = AppRoute;\nexport default AppRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRoute\");","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/src/routes/route.js"],"names":["React","useContext","Route","Redirect","AuthContext","AuthProvider","AppRoute","component","Component","layout","Layout","rest","authProtected","isAuthProtected","setIsAuthProtected","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,MAAM,EAAEC,MAAhC;AAAwC,KAAGC;AAA3C,CAAD,KAAuD;AAAA;;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAoBX,UAAU,CAACG,WAAD,CAApC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCF,aAA9C;;AAEA;AAAA,UAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAGI,KAAD,IAAW;AACjB,UAAIF,eAAJ,EAAqB;AACnB,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEG,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AAED,0BACE,QAAC,MAAD;AAAA,+BACE,QAAC,SAAD,OAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AAhBH;AAAA;AAAA;AAAA;AAAA;AAkBD,CAtBD;;GAAMT,Q;;KAAAA,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../AuthContext\";\nimport { AuthProvider } from \"../AuthContext\";\n\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => {\n  const { authProtected } = useContext(AuthContext);\n  const [isAuthProtected, setIsAuthProtected] = authProtected;\n\n  <Route\n    {...rest}\n    render={(props) => {\n      if (isAuthProtected) {\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      return (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      );\n    }}\n  />;\n};\n\nexport default AppRoute;\n"]},"metadata":{},"sourceType":"module"}