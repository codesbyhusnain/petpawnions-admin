{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n */\n\nvar _classCallCheck = require(\"/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar toCamelCase = require('../helpers/to-camel-case');\n\nvar deepClone = require('../helpers/deep-clone');\n/**\n * Options\n */\n\n\nvar AggregatedByOptions = ['day', 'week', 'month'];\nvar CountryOptions = ['us', 'ca'];\nvar SortByDirection = ['desc', 'asc'];\n/**\n * Statistics class\n */\n\nvar Statistics = /*#__PURE__*/function () {\n  function Statistics(data) {\n    _classCallCheck(this, Statistics);\n\n    this.startDate = null;\n    this.endDate = null;\n    this.aggregatedBy = null;\n\n    if (data) {\n      this.fromData(data);\n    }\n  }\n  /**\n   * Build from data\n   */\n\n\n  _createClass(Statistics, [{\n    key: \"fromData\",\n    value: function fromData(data) {\n      //Expecting object\n      if (typeof data !== 'object') {\n        throw new Error('Expecting object for Statistics data');\n      } //Convert to camel case to make it workable, making a copy to prevent\n      //changes to the original objects\n\n\n      data = deepClone(data);\n      data = toCamelCase(data, ['substitutions', 'customArgs']);\n      var _data = data,\n          startDate = _data.startDate,\n          endDate = _data.endDate,\n          aggregatedBy = _data.aggregatedBy;\n      this.setStartDate(startDate);\n      this.setEndDate(endDate);\n      this.setAggregatedBy(aggregatedBy);\n    }\n    /**\n     * Set startDate\n     */\n\n  }, {\n    key: \"setStartDate\",\n    value: function setStartDate(startDate) {\n      if (typeof startDate === 'undefined') {\n        throw new Error('Date expected for `startDate`');\n      }\n\n      if (new Date(startDate) === 'Invalid Date' || isNaN(new Date(startDate))) {\n        throw new Error('Date expected for `startDate`');\n      }\n\n      console.log(startDate);\n      this.startDate = new Date(startDate).toISOString().slice(0, 10);\n    }\n    /**\n     * Set endDate\n     */\n\n  }, {\n    key: \"setEndDate\",\n    value: function setEndDate(endDate) {\n      if (typeof endDate === 'undefined') {\n        this.endDate = new Date().toISOString().slice(0, 10);\n        return;\n      }\n\n      if (new Date(endDate) === 'Invalid Date' || isNaN(new Date(endDate))) {\n        throw new Error('Date expected for `endDate`');\n      }\n\n      this.endDate = new Date(endDate).toISOString().slice(0, 10);\n    }\n    /**\n     * Set aggregatedBy\n     */\n\n  }, {\n    key: \"setAggregatedBy\",\n    value: function setAggregatedBy(aggregatedBy) {\n      if (typeof aggregatedBy === 'undefined') {\n        return;\n      }\n\n      if (typeof aggregatedBy === 'string' && AggregatedByOptions.includes(aggregatedBy.toLowerCase())) {\n        this.aggregatedBy = aggregatedBy;\n      } else {\n        throw new Error('Incorrect value for `aggregatedBy`');\n      }\n    }\n    /**\n     * Get Global\n     */\n\n  }, {\n    key: \"getGlobal\",\n    value: function getGlobal() {\n      var startDate = this.startDate,\n          endDate = this.endDate,\n          aggregatedBy = this.aggregatedBy;\n      return {\n        startDate: startDate,\n        endDate: endDate,\n        aggregatedBy: aggregatedBy\n      };\n    }\n    /**\n     * Get Advanced\n     */\n\n  }, {\n    key: \"getAdvanced\",\n    value: function getAdvanced(country) {\n      var json = this.getGlobal();\n\n      if (typeof country === 'undefined') {\n        return json;\n      }\n\n      if (typeof country === 'string' && CountryOptions.includes(country.toLowerCase())) {\n        json.country = country;\n      }\n\n      return json;\n    }\n    /**\n     * Get Advanced Mailbox Providers\n     */\n\n  }, {\n    key: \"getAdvancedMailboxProviders\",\n    value: function getAdvancedMailboxProviders(mailBoxProviders) {\n      var json = this.getGlobal();\n\n      if (typeof mailBoxProviders === 'undefined') {\n        return json;\n      }\n\n      if (Array.isArray(mailBoxProviders) && mailBoxProviders.some(function (x) {\n        return typeof x !== 'string';\n      })) {\n        throw new Error('Array of strings expected for `mailboxProviders`');\n      }\n\n      json.mailBoxProviders = mailBoxProviders;\n      return json;\n    }\n    /**\n     * Get Advanced Browsers\n     */\n\n  }, {\n    key: \"getAdvancedBrowsers\",\n    value: function getAdvancedBrowsers(browsers) {\n      var json = this.getGlobal();\n\n      if (typeof browsers === 'undefined') {\n        return json;\n      }\n\n      if (Array.isArray(browsers) && browsers.some(function (x) {\n        return typeof x !== 'string';\n      })) {\n        throw new Error('Array of strings expected for `browsers`');\n      }\n\n      json.browsers = browsers;\n      return json;\n    }\n    /**\n     * Get Categories\n     */\n\n  }, {\n    key: \"getCategories\",\n    value: function getCategories(categories) {\n      if (typeof categories === 'undefined') {\n        throw new Error('Array of strings expected for `categories`');\n      }\n\n      if (!this._isValidArrayOfStrings(categories)) {\n        throw new Error('Array of strings expected for `categories`');\n      }\n\n      var json = this.getGlobal();\n      json.categories = categories;\n      return json;\n    }\n    /**\n     * Get Subuser\n     */\n\n  }, {\n    key: \"getSubuser\",\n    value: function getSubuser(subusers) {\n      if (typeof subusers === 'undefined') {\n        throw new Error('Array of strings expected for `subusers`');\n      }\n\n      if (!this._isValidArrayOfStrings(subusers)) {\n        throw new Error('Array of strings expected for `subusers`');\n      }\n\n      var json = this.getGlobal();\n      json.subusers = subusers;\n      return json;\n    }\n    /**\n     * Get Subuser Sum\n     */\n\n  }, {\n    key: \"getSubuserSum\",\n    value: function getSubuserSum() {\n      var sortByMetric = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'delivered';\n      var sortByDirection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SortByDirection[0];\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      if (typeof sortByMetric !== 'string') {\n        throw new Error('string expected for `sortByMetric`');\n      }\n\n      if (!SortByDirection.includes(sortByDirection.toLowerCase())) {\n        throw new Error('desc or asc expected for `sortByDirection`');\n      }\n\n      if (typeof limit !== 'number') {\n        throw new Error('number expected for `limit`');\n      }\n\n      if (typeof offset !== 'number') {\n        throw new Error('number expected for `offset`');\n      }\n\n      var json = this.getGlobal();\n      json.sortByMetric = sortByMetric;\n      json.sortByDirection = sortByDirection;\n      json.limit = limit;\n      json.offset = offset;\n      return json;\n    }\n    /**\n     * Get Subuser Monthly\n     */\n\n  }, {\n    key: \"getSubuserMonthly\",\n    value: function getSubuserMonthly() {\n      var sortByMetric = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'delivered';\n      var sortByDirection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SortByDirection[0];\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      if (typeof sortByMetric !== 'string') {\n        throw new Error('string expected for `sortByMetric`');\n      }\n\n      if (!SortByDirection.includes(sortByDirection.toLowerCase())) {\n        throw new Error('desc or asc expected for `sortByDirection`');\n      }\n\n      if (typeof limit !== 'number') {\n        throw new Error('number expected for `limit`');\n      }\n\n      if (typeof offset !== 'number') {\n        throw new Error('number expected for `offset`');\n      }\n\n      var json = this.getGlobal();\n      json.sortByMetric = sortByMetric;\n      json.sortByDirection = sortByDirection;\n      json.limit = limit;\n      json.offset = offset;\n      return json;\n    }\n  }, {\n    key: \"_isValidArrayOfStrings\",\n    value: function _isValidArrayOfStrings(arr) {\n      if (!Array.isArray(arr)) {\n        return false;\n      }\n\n      if (arr.length < 1 || arr.some(function (x) {\n        return typeof x !== 'string';\n      })) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return Statistics;\n}(); //Export class\n\n\nmodule.exports = Statistics;","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/node_modules/@sendgrid/helpers/classes/statistics.js"],"names":["toCamelCase","require","deepClone","AggregatedByOptions","CountryOptions","SortByDirection","Statistics","data","startDate","endDate","aggregatedBy","fromData","Error","setStartDate","setEndDate","setAggregatedBy","Date","isNaN","console","log","toISOString","slice","includes","toLowerCase","country","json","getGlobal","mailBoxProviders","Array","isArray","some","x","browsers","categories","_isValidArrayOfStrings","subusers","sortByMetric","sortByDirection","limit","offset","arr","length","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;;;;;;AACA,IAAMA,WAAW,GAAGC,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,uBAAD,CAAzB;AAEA;AACA;AACA;;;AACA,IAAME,mBAAmB,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CAA5B;AACA,IAAMC,cAAc,GAAG,CAAC,IAAD,EAAO,IAAP,CAAvB;AACA,IAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,KAAT,CAAxB;AAEA;AACA;AACA;;IACMC,U;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,YAAL,GAAoB,IAApB;;AAEA,QAAIH,IAAJ,EAAU;AACR,WAAKI,QAAL,CAAcJ,IAAd;AACD;AACF;AAED;AACF;AACA;;;;;WACE,kBAASA,IAAT,EAAe;AAEb;AACA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIK,KAAJ,CAAU,sCAAV,CAAN;AACD,OALY,CAOb;AACA;;;AACAL,MAAAA,IAAI,GAAGL,SAAS,CAACK,IAAD,CAAhB;AACAA,MAAAA,IAAI,GAAGP,WAAW,CAACO,IAAD,EAAO,CAAC,eAAD,EAAkB,YAAlB,CAAP,CAAlB;AAEA,kBAGIA,IAHJ;AAAA,UAAQC,SAAR,SAAQA,SAAR;AAAA,UACEC,OADF,SACEA,OADF;AAAA,UAEEC,YAFF,SAEEA,YAFF;AAKA,WAAKG,YAAL,CAAkBL,SAAlB;AACA,WAAKM,UAAL,CAAgBL,OAAhB;AACA,WAAKM,eAAL,CAAqBL,YAArB;AACD;AAED;AACF;AACA;;;;WACE,sBAAaF,SAAb,EAAwB;AACtB,UAAI,OAAOA,SAAP,KAAqB,WAAzB,EAAsC;AACpC,cAAM,IAAII,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,UAAK,IAAII,IAAJ,CAASR,SAAT,MAAwB,cAAzB,IACAS,KAAK,CAAC,IAAID,IAAJ,CAASR,SAAT,CAAD,CADT,EACgC;AAC9B,cAAM,IAAII,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAEDM,MAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEA,WAAKA,SAAL,GAAiB,IAAIQ,IAAJ,CAASR,SAAT,EAAoBY,WAApB,GAAkCC,KAAlC,CAAwC,CAAxC,EAA2C,EAA3C,CAAjB;AACD;AAED;AACF;AACA;;;;WACE,oBAAWZ,OAAX,EAAoB;AAClB,UAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClC,aAAKA,OAAL,GAAe,IAAIO,IAAJ,GAAWI,WAAX,GAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAf;AACA;AACD;;AAED,UAAI,IAAIL,IAAJ,CAASP,OAAT,MAAsB,cAAtB,IAAwCQ,KAAK,CAAC,IAAID,IAAJ,CAASP,OAAT,CAAD,CAAjD,EAAsE;AACpE,cAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,WAAKH,OAAL,GAAe,IAAIO,IAAJ,CAASP,OAAT,EAAkBW,WAAlB,GAAgCC,KAAhC,CAAsC,CAAtC,EAAyC,EAAzC,CAAf;AACD;AAED;AACF;AACA;;;;WACE,yBAAgBX,YAAhB,EAA8B;AAC5B,UAAI,OAAOA,YAAP,KAAwB,WAA5B,EAAyC;AACvC;AACD;;AAED,UAAI,OAAOA,YAAP,KAAwB,QAAxB,IACAP,mBAAmB,CAACmB,QAApB,CAA6BZ,YAAY,CAACa,WAAb,EAA7B,CADJ,EAC8D;AAC5D,aAAKb,YAAL,GAAoBA,YAApB;AACD,OAHD,MAGO;AACL,cAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN;AACD;AACF;AAED;AACF;AACA;;;;WACE,qBAAY;AACV,UAAQJ,SAAR,GAA6C,IAA7C,CAAQA,SAAR;AAAA,UAAmBC,OAAnB,GAA6C,IAA7C,CAAmBA,OAAnB;AAAA,UAA4BC,YAA5B,GAA6C,IAA7C,CAA4BA,YAA5B;AAEA,aAAO;AAAEF,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,OAAO,EAAPA,OAAb;AAAsBC,QAAAA,YAAY,EAAZA;AAAtB,OAAP;AACD;AAED;AACF;AACA;;;;WACE,qBAAYc,OAAZ,EAAqB;AACnB,UAAMC,IAAI,GAAG,KAAKC,SAAL,EAAb;;AAEA,UAAI,OAAOF,OAAP,KAAmB,WAAvB,EAAoC;AAClC,eAAOC,IAAP;AACD;;AAED,UAAI,OAAOD,OAAP,KAAmB,QAAnB,IACApB,cAAc,CAACkB,QAAf,CAAwBE,OAAO,CAACD,WAAR,EAAxB,CADJ,EACoD;AAClDE,QAAAA,IAAI,CAACD,OAAL,GAAeA,OAAf;AACD;;AAED,aAAOC,IAAP;AACD;AAED;AACF;AACA;;;;WACE,qCAA4BE,gBAA5B,EAA8C;AAC5C,UAAMF,IAAI,GAAG,KAAKC,SAAL,EAAb;;AAEA,UAAI,OAAOC,gBAAP,KAA4B,WAAhC,EAA6C;AAC3C,eAAOF,IAAP;AACD;;AAED,UAAIG,KAAK,CAACC,OAAN,CAAcF,gBAAd,KACAA,gBAAgB,CAACG,IAAjB,CAAsB,UAAAC,CAAC;AAAA,eAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,OAAvB,CADJ,EACuD;AACrD,cAAM,IAAInB,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAEDa,MAAAA,IAAI,CAACE,gBAAL,GAAwBA,gBAAxB;AAEA,aAAOF,IAAP;AACD;AAED;AACF;AACA;;;;WACE,6BAAoBO,QAApB,EAA8B;AAC5B,UAAMP,IAAI,GAAG,KAAKC,SAAL,EAAb;;AAEA,UAAI,OAAOM,QAAP,KAAoB,WAAxB,EAAqC;AACnC,eAAOP,IAAP;AACD;;AAED,UAAIG,KAAK,CAACC,OAAN,CAAcG,QAAd,KAA2BA,QAAQ,CAACF,IAAT,CAAc,UAAAC,CAAC;AAAA,eAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,OAAf,CAA/B,EAA0E;AACxE,cAAM,IAAInB,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDa,MAAAA,IAAI,CAACO,QAAL,GAAgBA,QAAhB;AAEA,aAAOP,IAAP;AACD;AAED;AACF;AACA;;;;WACE,uBAAcQ,UAAd,EAA0B;AACxB,UAAI,OAAOA,UAAP,KAAsB,WAA1B,EAAuC;AACrC,cAAM,IAAIrB,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,UAAI,CAAC,KAAKsB,sBAAL,CAA4BD,UAA5B,CAAL,EAA8C;AAC5C,cAAM,IAAIrB,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,UAAMa,IAAI,GAAG,KAAKC,SAAL,EAAb;AACAD,MAAAA,IAAI,CAACQ,UAAL,GAAkBA,UAAlB;AAEA,aAAOR,IAAP;AACD;AAED;AACF;AACA;;;;WACE,oBAAWU,QAAX,EAAqB;AACnB,UAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnC,cAAM,IAAIvB,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,UAAI,CAAC,KAAKsB,sBAAL,CAA4BC,QAA5B,CAAL,EAA4C;AAC1C,cAAM,IAAIvB,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,UAAMa,IAAI,GAAG,KAAKC,SAAL,EAAb;AACAD,MAAAA,IAAI,CAACU,QAAL,GAAgBA,QAAhB;AAEA,aAAOV,IAAP;AACD;AAED;AACF;AACA;;;;WACE,yBAC+D;AAAA,UADjDW,YACiD,uEADlC,WACkC;AAAA,UAA7DC,eAA6D,uEAA3ChC,eAAe,CAAC,CAAD,CAA4B;AAAA,UAAvBiC,KAAuB,uEAAf,CAAe;AAAA,UAAZC,MAAY,uEAAH,CAAG;;AAC7D,UAAI,OAAOH,YAAP,KAAwB,QAA5B,EAAsC;AACpC,cAAM,IAAIxB,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,UAAI,CAACP,eAAe,CAACiB,QAAhB,CAAyBe,eAAe,CAACd,WAAhB,EAAzB,CAAL,EAA8D;AAC5D,cAAM,IAAIX,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,UAAI,OAAO0B,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAM,IAAI1B,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,UAAI,OAAO2B,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,cAAM,IAAI3B,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,UAAMa,IAAI,GAAG,KAAKC,SAAL,EAAb;AAEAD,MAAAA,IAAI,CAACW,YAAL,GAAoBA,YAApB;AACAX,MAAAA,IAAI,CAACY,eAAL,GAAuBA,eAAvB;AACAZ,MAAAA,IAAI,CAACa,KAAL,GAAaA,KAAb;AACAb,MAAAA,IAAI,CAACc,MAAL,GAAcA,MAAd;AAEA,aAAOd,IAAP;AACD;AAED;AACF;AACA;;;;WACE,6BAC+D;AAAA,UAD7CW,YAC6C,uEAD9B,WAC8B;AAAA,UAA7DC,eAA6D,uEAA3ChC,eAAe,CAAC,CAAD,CAA4B;AAAA,UAAvBiC,KAAuB,uEAAf,CAAe;AAAA,UAAZC,MAAY,uEAAH,CAAG;;AAC7D,UAAI,OAAOH,YAAP,KAAwB,QAA5B,EAAsC;AACpC,cAAM,IAAIxB,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,UAAI,CAACP,eAAe,CAACiB,QAAhB,CAAyBe,eAAe,CAACd,WAAhB,EAAzB,CAAL,EAA8D;AAC5D,cAAM,IAAIX,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,UAAI,OAAO0B,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAM,IAAI1B,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,UAAI,OAAO2B,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,cAAM,IAAI3B,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,UAAMa,IAAI,GAAG,KAAKC,SAAL,EAAb;AAEAD,MAAAA,IAAI,CAACW,YAAL,GAAoBA,YAApB;AACAX,MAAAA,IAAI,CAACY,eAAL,GAAuBA,eAAvB;AACAZ,MAAAA,IAAI,CAACa,KAAL,GAAaA,KAAb;AACAb,MAAAA,IAAI,CAACc,MAAL,GAAcA,MAAd;AAEA,aAAOd,IAAP;AACD;;;WAED,gCAAuBe,GAAvB,EAA4B;AAC1B,UAAI,CAACZ,KAAK,CAACC,OAAN,CAAcW,GAAd,CAAL,EAAyB;AACvB,eAAO,KAAP;AACD;;AAED,UAAIA,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkBD,GAAG,CAACV,IAAJ,CAAS,UAAAC,CAAC;AAAA,eAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,OAAV,CAAtB,EAA4D;AAC1D,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;;;KAGH;;;AACAW,MAAM,CAACC,OAAP,GAAiBrC,UAAjB","sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\nconst toCamelCase = require('../helpers/to-camel-case');\nconst deepClone = require('../helpers/deep-clone');\n\n/**\n * Options\n */\nconst AggregatedByOptions = ['day', 'week', 'month'];\nconst CountryOptions = ['us', 'ca'];\nconst SortByDirection = ['desc', 'asc'];\n\n/**\n * Statistics class\n */\nclass Statistics {\n  constructor(data) {\n    this.startDate = null;\n    this.endDate = null;\n    this.aggregatedBy = null;\n\n    if (data) {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * Build from data\n   */\n  fromData(data) {\n\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Statistics data');\n    }\n\n    //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'customArgs']);\n\n    const { startDate,\n      endDate,\n      aggregatedBy,\n    } = data;\n\n    this.setStartDate(startDate);\n    this.setEndDate(endDate);\n    this.setAggregatedBy(aggregatedBy);\n  }\n\n  /**\n   * Set startDate\n   */\n  setStartDate(startDate) {\n    if (typeof startDate === 'undefined') {\n      throw new Error('Date expected for `startDate`');\n    }\n\n    if ((new Date(startDate) === 'Invalid Date') ||\n        isNaN(new Date(startDate))) {\n      throw new Error('Date expected for `startDate`');\n    }\n\n    console.log(startDate);\n\n    this.startDate = new Date(startDate).toISOString().slice(0, 10);\n  }\n\n  /**\n   * Set endDate\n   */\n  setEndDate(endDate) {\n    if (typeof endDate === 'undefined') {\n      this.endDate = new Date().toISOString().slice(0, 10);\n      return;\n    }\n\n    if (new Date(endDate) === 'Invalid Date' || isNaN(new Date(endDate))) {\n      throw new Error('Date expected for `endDate`');\n    }\n\n    this.endDate = new Date(endDate).toISOString().slice(0, 10);\n  }\n\n  /**\n   * Set aggregatedBy\n   */\n  setAggregatedBy(aggregatedBy) {\n    if (typeof aggregatedBy === 'undefined') {\n      return;\n    }\n\n    if (typeof aggregatedBy === 'string' &&\n        AggregatedByOptions.includes(aggregatedBy.toLowerCase())) {\n      this.aggregatedBy = aggregatedBy;\n    } else {\n      throw new Error('Incorrect value for `aggregatedBy`');\n    }\n  }\n\n  /**\n   * Get Global\n   */\n  getGlobal() {\n    const { startDate, endDate, aggregatedBy } = this;\n\n    return { startDate, endDate, aggregatedBy };\n  }\n\n  /**\n   * Get Advanced\n   */\n  getAdvanced(country) {\n    const json = this.getGlobal();\n\n    if (typeof country === 'undefined') {\n      return json;\n    }\n\n    if (typeof country === 'string' &&\n        CountryOptions.includes(country.toLowerCase())) {\n      json.country = country;\n    }\n\n    return json;\n  }\n\n  /**\n   * Get Advanced Mailbox Providers\n   */\n  getAdvancedMailboxProviders(mailBoxProviders) {\n    const json = this.getGlobal();\n\n    if (typeof mailBoxProviders === 'undefined') {\n      return json;\n    }\n\n    if (Array.isArray(mailBoxProviders) &&\n        mailBoxProviders.some(x => typeof x !== 'string')) {\n      throw new Error('Array of strings expected for `mailboxProviders`');\n    }\n\n    json.mailBoxProviders = mailBoxProviders;\n\n    return json;\n  }\n\n  /**\n   * Get Advanced Browsers\n   */\n  getAdvancedBrowsers(browsers) {\n    const json = this.getGlobal();\n\n    if (typeof browsers === 'undefined') {\n      return json;\n    }\n\n    if (Array.isArray(browsers) && browsers.some(x => typeof x !== 'string')) {\n      throw new Error('Array of strings expected for `browsers`');\n    }\n\n    json.browsers = browsers;\n\n    return json;\n  }\n\n  /**\n   * Get Categories\n   */\n  getCategories(categories) {\n    if (typeof categories === 'undefined') {\n      throw new Error('Array of strings expected for `categories`');\n    }\n\n    if (!this._isValidArrayOfStrings(categories)) {\n      throw new Error('Array of strings expected for `categories`');\n    }\n\n    const json = this.getGlobal();\n    json.categories = categories;\n\n    return json;\n  }\n\n  /**\n   * Get Subuser\n   */\n  getSubuser(subusers) {\n    if (typeof subusers === 'undefined') {\n      throw new Error('Array of strings expected for `subusers`');\n    }\n\n    if (!this._isValidArrayOfStrings(subusers)) {\n      throw new Error('Array of strings expected for `subusers`');\n    }\n\n    const json = this.getGlobal();\n    json.subusers = subusers;\n\n    return json;\n  }\n\n  /**\n   * Get Subuser Sum\n   */\n  getSubuserSum(sortByMetric = 'delivered',\n    sortByDirection = SortByDirection[0], limit = 5, offset = 0) {\n    if (typeof sortByMetric !== 'string') {\n      throw new Error('string expected for `sortByMetric`');\n    }\n\n    if (!SortByDirection.includes(sortByDirection.toLowerCase())) {\n      throw new Error('desc or asc expected for `sortByDirection`');\n    }\n\n    if (typeof limit !== 'number') {\n      throw new Error('number expected for `limit`');\n    }\n\n    if (typeof offset !== 'number') {\n      throw new Error('number expected for `offset`');\n    }\n\n    const json = this.getGlobal();\n\n    json.sortByMetric = sortByMetric;\n    json.sortByDirection = sortByDirection;\n    json.limit = limit;\n    json.offset = offset;\n\n    return json;\n  }\n\n  /**\n   * Get Subuser Monthly\n   */\n  getSubuserMonthly(sortByMetric = 'delivered',\n    sortByDirection = SortByDirection[0], limit = 5, offset = 0) {\n    if (typeof sortByMetric !== 'string') {\n      throw new Error('string expected for `sortByMetric`');\n    }\n\n    if (!SortByDirection.includes(sortByDirection.toLowerCase())) {\n      throw new Error('desc or asc expected for `sortByDirection`');\n    }\n\n    if (typeof limit !== 'number') {\n      throw new Error('number expected for `limit`');\n    }\n\n    if (typeof offset !== 'number') {\n      throw new Error('number expected for `offset`');\n    }\n\n    const json = this.getGlobal();\n\n    json.sortByMetric = sortByMetric;\n    json.sortByDirection = sortByDirection;\n    json.limit = limit;\n    json.offset = offset;\n\n    return json;\n  }\n\n  _isValidArrayOfStrings(arr) {\n    if (!Array.isArray(arr)) {\n      return false;\n    }\n\n    if (arr.length < 1 || arr.some(x => typeof x !== 'string')) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n//Export class\nmodule.exports = Statistics;\n"]},"metadata":{},"sourceType":"script"}