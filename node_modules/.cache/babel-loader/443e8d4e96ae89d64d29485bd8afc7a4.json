{"ast":null,"code":"'use strict';\n\nvar validate = function validate(parent, parentName, childName, childType) {\n  if (typeof parent === 'undefined' || typeof parent[childName] === 'undefined') {\n    return;\n  }\n\n  if (typeof parent[childName] !== childType) {\n    throw new Error(\"\".concat(childType, \" expected for `\").concat(parentName, \".\").concat(childName, \"`\"));\n  }\n};\n\nmodule.exports = {\n  validateMailSettings: function validateMailSettings(settings) {\n    if (typeof settings !== 'object') {\n      throw new Error('Object expected for `mailSettings`');\n    }\n\n    var bcc = settings.bcc,\n        bypassListManagement = settings.bypassListManagement,\n        footer = settings.footer,\n        sandboxMode = settings.sandboxMode,\n        spamCheck = settings.spamCheck;\n    validate(bcc, 'bcc', 'enable', 'boolean');\n    validate(bcc, 'bcc', 'email', 'string');\n    validate(bypassListManagement, 'bypassListManagement', 'enable', 'boolean');\n    validate(footer, 'footer', 'enable', 'boolean');\n    validate(footer, 'footer', 'text', 'string');\n    validate(footer, 'footer', 'html', 'string');\n    validate(sandboxMode, 'sandboxMode', 'enable', 'boolean');\n    validate(spamCheck, 'spamCheck', 'enable', 'boolean');\n    validate(spamCheck, 'spamCheck', 'threshold', 'number');\n    validate(spamCheck, 'spamCheck', 'postToUrl', 'string');\n  },\n  validateTrackingSettings: function validateTrackingSettings(settings) {\n    if (typeof settings !== 'object') {\n      throw new Error('Object expected for `trackingSettings`');\n    }\n\n    var clickTracking = settings.clickTracking,\n        openTracking = settings.openTracking,\n        subscriptionTracking = settings.subscriptionTracking,\n        ganalytics = settings.ganalytics;\n    validate(clickTracking, 'clickTracking', 'enable', 'boolean');\n    validate(clickTracking, 'clickTracking', 'enableText', 'boolean');\n    validate(openTracking, 'openTracking', 'enable', 'boolean');\n    validate(openTracking, 'openTracking', 'substitutionTag', 'string');\n    validate(subscriptionTracking, 'subscriptionTracking', 'enable', 'boolean');\n    validate(subscriptionTracking, 'subscriptionTracking', 'text', 'string');\n    validate(subscriptionTracking, 'subscriptionTracking', 'html', 'string');\n    validate(subscriptionTracking, 'subscriptionTracking', 'substitutionTag', 'string');\n    validate(ganalytics, 'ganalytics', 'enable', 'boolean');\n    validate(ganalytics, 'ganalytics', 'utm_source', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_medium', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_term', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_content', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_campaign', 'string');\n  }\n};","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/node_modules/@sendgrid/helpers/helpers/validate-settings.js"],"names":["validate","parent","parentName","childName","childType","Error","module","exports","validateMailSettings","settings","bcc","bypassListManagement","footer","sandboxMode","spamCheck","validateTrackingSettings","clickTracking","openTracking","subscriptionTracking","ganalytics"],"mappings":"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","sourcesContent":["'use strict';\n\nconst validate = (parent, parentName, childName, childType) => {\n  if (typeof parent === 'undefined' || typeof parent[childName] === 'undefined') {\n    return;\n  }\n  if (typeof parent[childName] !== childType) {\n    throw new Error(`${childType} expected for \\`${parentName}.${childName}\\``)\n  }\n};\n\nmodule.exports = {\n  validateMailSettings(settings) {\n    if (typeof settings !== 'object') {\n      throw new Error('Object expected for `mailSettings`');\n    }\n    const {\n      bcc,\n      bypassListManagement,\n      footer,\n      sandboxMode,\n      spamCheck,\n    } = settings;\n    validate(bcc, 'bcc', 'enable', 'boolean');\n    validate(bcc, 'bcc', 'email', 'string');\n    validate(bypassListManagement, 'bypassListManagement', 'enable', 'boolean');\n    validate(footer, 'footer', 'enable', 'boolean');\n    validate(footer, 'footer', 'text', 'string');\n    validate(footer, 'footer', 'html', 'string');\n    validate(sandboxMode, 'sandboxMode', 'enable', 'boolean');\n    validate(spamCheck, 'spamCheck', 'enable', 'boolean');\n    validate(spamCheck, 'spamCheck', 'threshold', 'number');\n    validate(spamCheck, 'spamCheck', 'postToUrl', 'string');\n  },\n\n  validateTrackingSettings(settings) {\n    if (typeof settings !== 'object') {\n      throw new Error('Object expected for `trackingSettings`');\n    }\n    const {\n      clickTracking,\n      openTracking,\n      subscriptionTracking,\n      ganalytics,\n    } = settings;\n    validate(clickTracking, 'clickTracking', 'enable', 'boolean');\n    validate(clickTracking, 'clickTracking', 'enableText', 'boolean');\n    validate(openTracking, 'openTracking', 'enable', 'boolean');\n    validate(openTracking, 'openTracking', 'substitutionTag', 'string');\n    validate(subscriptionTracking, 'subscriptionTracking', 'enable', 'boolean');\n    validate(subscriptionTracking, 'subscriptionTracking', 'text', 'string');\n    validate(subscriptionTracking, 'subscriptionTracking', 'html', 'string');\n    validate(subscriptionTracking, 'subscriptionTracking', 'substitutionTag', 'string');\n    validate(ganalytics, 'ganalytics', 'enable', 'boolean');\n    validate(ganalytics, 'ganalytics', 'utm_source', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_medium', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_term', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_content', 'string');\n    validate(ganalytics, 'ganalytics', 'utm_campaign', 'string');\n  },\n};\n"]},"metadata":{},"sourceType":"script"}