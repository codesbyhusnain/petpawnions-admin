{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/src/pages/PetEvents/PetEventsContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventsContext = /*#__PURE__*/createContext();\nexport const PetEventsProvider = props => {\n  _s();\n\n  const [eventsData, setEventsData] = useState([]);\n  const {\n    token\n  } = useContext(AuthContext);\n  const [state, setState] = useState(0);\n  const tokenValue = String(localStorage.getItem(\"jwtToken\"));\n  const apiUrl = \"http://3.15.82.201:3000/api/event\";\n  const [jwtToken, setJwtToken] = token;\n  setJwtToken(tokenValue);\n  const config = {\n    headers: {\n      Authorization: `Bearer ${jwtToken}`\n    }\n  };\n  useEffect(() => {\n    Axios.get(apiUrl, config).then(response => setEventsData(response.data));\n  }, []);\n  const columns = [{\n    title: \"Title\"\n  }, {\n    title: \"Address\"\n  }, {\n    title: \"Category\"\n  }, {\n    title: \"Start Time\"\n  }, {\n    title: \"End Time\"\n  }, {\n    title: \"Postal Code\"\n  }, {\n    title: \"URL\"\n  }, {\n    title: \"Action\"\n  }];\n  return /*#__PURE__*/_jsxDEV(EventsContext.Provider, {\n    value: {\n      events: [eventsData, setEventsData],\n      state: [state, setState],\n      columns: columns,\n      jwtToken: token\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PetEventsProvider, \"hV05LqP8eX4fIii5Ss1i4NWQ+i4=\");\n\n_c = PetEventsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetEventsProvider\");","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/src/pages/PetEvents/PetEventsContext.js"],"names":["React","useState","createContext","useEffect","useContext","Axios","AuthContext","EventsContext","PetEventsProvider","props","eventsData","setEventsData","token","state","setState","tokenValue","String","localStorage","getItem","apiUrl","jwtToken","setJwtToken","config","headers","Authorization","get","then","response","data","columns","title","events","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,EAAnC;AAEP,OAAO,MAAMM,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAYR,UAAU,CAACE,WAAD,CAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMc,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAzB;AACA,QAAMC,MAAM,GAAG,mCAAf;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAhC;AACAS,EAAAA,WAAW,CAACN,UAAD,CAAX;AAEA,QAAMO,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASJ,QAAS;AAD3B;AADI,GAAf;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACoB,GAAN,CAAUN,MAAV,EAAkBG,MAAlB,EAA0BI,IAA1B,CAAgCC,QAAD,IAAchB,aAAa,CAACgB,QAAQ,CAACC,IAAV,CAA1D;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE;AADT,GADc,EAId;AACEA,IAAAA,KAAK,EAAE;AADT,GAJc,EAOd;AACEA,IAAAA,KAAK,EAAE;AADT,GAPc,EAUd;AACEA,IAAAA,KAAK,EAAE;AADT,GAVc,EAad;AACEA,IAAAA,KAAK,EAAE;AADT,GAbc,EAgBd;AACEA,IAAAA,KAAK,EAAE;AADT,GAhBc,EAmBd;AACEA,IAAAA,KAAK,EAAE;AADT,GAnBc,EAuBd;AACEA,IAAAA,KAAK,EAAE;AADT,GAvBc,CAAhB;AA4BA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,CAACrB,UAAD,EAAaC,aAAb,CADH;AAELE,MAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAFF;AAGLe,MAAAA,OAAO,EAAEA,OAHJ;AAILT,MAAAA,QAAQ,EAAER;AAJL,KADT;AAAA,cAQGH,KAAK,CAACuB;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3DM;;GAAMxB,iB;;KAAAA,iB","sourcesContent":["import React, { useState, createContext, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"../../AuthContext\";\n\nexport const EventsContext = createContext();\n\nexport const PetEventsProvider = (props) => {\n  const [eventsData, setEventsData] = useState([]);\n  const { token } = useContext(AuthContext);\n  const [state, setState] = useState(0);\n  const tokenValue = String(localStorage.getItem(\"jwtToken\"));\n  const apiUrl = \"http://3.15.82.201:3000/api/event\";\n  const [jwtToken, setJwtToken] = token;\n  setJwtToken(tokenValue);\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${jwtToken}`,\n    },\n  };\n\n  useEffect(() => {\n    Axios.get(apiUrl, config).then((response) => setEventsData(response.data));\n  }, []);\n\n  const columns = [\n    {\n      title: \"Title\",\n    },\n    {\n      title: \"Address\",\n    },\n    {\n      title: \"Category\",\n    },\n    {\n      title: \"Start Time\",\n    },\n    {\n      title: \"End Time\",\n    },\n    {\n      title: \"Postal Code\",\n    },\n    {\n      title: \"URL\",\n    },\n\n    {\n      title: \"Action\",\n    },\n  ];\n\n  return (\n    <EventsContext.Provider\n      value={{\n        events: [eventsData, setEventsData],\n        state: [state, setState],\n        columns: columns,\n        jwtToken: token,\n      }}\n    >\n      {props.children}\n    </EventsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}