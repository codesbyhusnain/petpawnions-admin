{"ast":null,"code":"import _slicedToArray from\"/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createContext,useEffect,useContext}from\"react\";import Axios from\"axios\";import{AuthContext}from\"../../AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";export var PlacesContext=/*#__PURE__*/createContext();export var PetPlacesProvider=function PetPlacesProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),placesData=_useState2[0],setPlacesData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];var apiUrl=\"http://18.216.174.90:3000/api/petplace\";var _useContext=useContext(AuthContext),token=_useContext.token;var tokenValue=String(localStorage.getItem(\"jwtToken\"));var _token=_slicedToArray(token,2),jwtToken=_token[0],setJwtToken=_token[1];setJwtToken(tokenValue);var config={headers:{Authorization:\"Bearer \".concat(jwtToken)}};// const response = Axios.get(apiUrl, config);\nuseEffect(function(){Axios.get(apiUrl,config).then(function(response){return setPlacesData(response.data);});},[]);var columns=[{title:\"Title\"},{title:\"Address\"},{title:\"Longitude\"},{title:\"Latitude\"},{title:\"Open Time\"},{title:\"Close Time\"},{title:\"Postal Code\"},{title:\"Category\"},{title:\"Phone\"},// {\n//   title: \"Facebook Link\",\n// },\n// {\n//   title: \"Instagram Link\",\n// },\n// {\n//   title: \"Twitter Link\",\n// },\n{title:\"Email\"},{title:\"URL\"},{title:\"Action\"}];return/*#__PURE__*/_jsx(PlacesContext.Provider,{value:{columns:columns,placesData:[placesData,setPlacesData],state:[state,setState]},children:props.children});};","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/src/pages/PetPlaces/PlacesContext.js"],"names":["React","useState","createContext","useEffect","useContext","Axios","AuthContext","PlacesContext","PetPlacesProvider","props","placesData","setPlacesData","state","setState","apiUrl","token","tokenValue","String","localStorage","getItem","jwtToken","setJwtToken","config","headers","Authorization","get","then","response","data","columns","title","children"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,aAA1B,CAAyCC,SAAzC,CAAoDC,UAApD,KAAsE,OAAtE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,mBAA5B,C,2CAEA,MAAO,IAAMC,CAAAA,aAAa,cAAGL,aAAa,EAAnC,CAEP,MAAO,IAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CAC1C,cAAoCR,QAAQ,CAAC,EAAD,CAA5C,wCAAOS,UAAP,eAAmBC,aAAnB,eACA,eAA0BV,QAAQ,CAAC,CAAD,CAAlC,yCAAOW,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,MAAM,CAAG,wCAAf,CACA,gBAAkBV,UAAU,CAACE,WAAD,CAA5B,CAAQS,KAAR,aAAQA,KAAR,CACA,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAzB,CACA,0BAAgCJ,KAAhC,IAAOK,QAAP,WAAiBC,WAAjB,WACAA,WAAW,CAACL,UAAD,CAAX,CAEA,GAAMM,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACPC,aAAa,kBAAYJ,QAAZ,CADN,CADI,CAAf,CAKA;AAEAjB,SAAS,CAAC,UAAM,CACdE,KAAK,CAACoB,GAAN,CAAUX,MAAV,CAAkBQ,MAAlB,EAA0BI,IAA1B,CAA+B,SAACC,QAAD,QAAchB,CAAAA,aAAa,CAACgB,QAAQ,CAACC,IAAV,CAA3B,EAA/B,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,OADT,CADc,CAId,CACEA,KAAK,CAAE,SADT,CAJc,CAOd,CACEA,KAAK,CAAE,WADT,CAPc,CAUd,CACEA,KAAK,CAAE,UADT,CAVc,CAad,CACEA,KAAK,CAAE,WADT,CAbc,CAgBd,CACEA,KAAK,CAAE,YADT,CAhBc,CAmBd,CACEA,KAAK,CAAE,aADT,CAnBc,CAsBd,CACEA,KAAK,CAAE,UADT,CAtBc,CAyBd,CACEA,KAAK,CAAE,OADT,CAzBc,CA4Bd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACEA,KAAK,CAAE,OADT,CArCc,CAwCd,CACEA,KAAK,CAAE,KADT,CAxCc,CA2Cd,CACEA,KAAK,CAAE,QADT,CA3Cc,CAAhB,CAgDA,mBACE,KAAC,aAAD,CAAe,QAAf,EACE,KAAK,CAAE,CACLD,OAAO,CAAEA,OADJ,CAELnB,UAAU,CAAE,CAACA,UAAD,CAAaC,aAAb,CAFP,CAGLC,KAAK,CAAE,CAACA,KAAD,CAAQC,QAAR,CAHF,CADT,UAOGJ,KAAK,CAACsB,QAPT,EADF,CAWD,CA/EM","sourcesContent":["import React, { useState, createContext, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"../../AuthContext\";\n\nexport const PlacesContext = createContext();\n\nexport const PetPlacesProvider = (props) => {\n  const [placesData, setPlacesData] = useState([]);\n  const [state, setState] = useState(0);\n  const apiUrl = \"http://18.216.174.90:3000/api/petplace\";\n  const { token } = useContext(AuthContext);\n  const tokenValue = String(localStorage.getItem(\"jwtToken\"));\n  const [jwtToken, setJwtToken] = token;\n  setJwtToken(tokenValue);\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${jwtToken}`,\n    },\n  };\n  // const response = Axios.get(apiUrl, config);\n\n  useEffect(() => {\n    Axios.get(apiUrl, config).then((response) => setPlacesData(response.data));\n  }, []);\n\n  const columns = [\n    {\n      title: \"Title\",\n    },\n    {\n      title: \"Address\",\n    },\n    {\n      title: \"Longitude\",\n    },\n    {\n      title: \"Latitude\",\n    },\n    {\n      title: \"Open Time\",\n    },\n    {\n      title: \"Close Time\",\n    },\n    {\n      title: \"Postal Code\",\n    },\n    {\n      title: \"Category\",\n    },\n    {\n      title: \"Phone\",\n    },\n    // {\n    //   title: \"Facebook Link\",\n    // },\n    // {\n    //   title: \"Instagram Link\",\n    // },\n    // {\n    //   title: \"Twitter Link\",\n    // },\n    {\n      title: \"Email\",\n    },\n    {\n      title: \"URL\",\n    },\n    {\n      title: \"Action\",\n    },\n  ];\n\n  return (\n    <PlacesContext.Provider\n      value={{\n        columns: columns,\n        placesData: [placesData, setPlacesData],\n        state: [state, setState],\n      }}\n    >\n      {props.children}\n    </PlacesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}