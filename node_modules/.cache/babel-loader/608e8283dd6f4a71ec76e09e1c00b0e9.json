{"ast":null,"code":"'use strict';\n/**\n * Wrap substitutions\n */\n\nmodule.exports = function wrap(substitutions) {\n  var left = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '{{';\n  var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '}}';\n\n  //Process arrays\n  if (Array.isArray(substitutions)) {\n    return substitutions.map(function (subs) {\n      return wrap(subs, left, right);\n    });\n  } //Initialize new wrapped object\n\n\n  var wrapped = {}; //Map substitutions and ensure string for value\n\n  for (var key in substitutions) {\n    //istanbul ignore else\n    if (substitutions.hasOwnProperty(key)) {\n      wrapped[left + key + right] = String(substitutions[key]);\n    }\n  } //Return wrapped substitutions\n\n\n  return wrapped;\n};","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/React/PP-AdminWeb/node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js"],"names":["module","exports","wrap","substitutions","left","right","Array","isArray","map","subs","wrapped","key","hasOwnProperty","String"],"mappings":"AAAA;AAEA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,aAAd,EAAwD;AAAA,MAA3BC,IAA2B,uEAApB,IAAoB;AAAA,MAAdC,KAAc,uEAAN,IAAM;;AAEvE;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcJ,aAAd,CAAJ,EAAkC;AAChC,WAAOA,aAAa,CAACK,GAAd,CAAkB,UAAAC,IAAI;AAAA,aAAIP,IAAI,CAACO,IAAD,EAAOL,IAAP,EAAaC,KAAb,CAAR;AAAA,KAAtB,CAAP;AACD,GALsE,CAOvE;;;AACA,MAAMK,OAAO,GAAG,EAAhB,CARuE,CAUvE;;AACA,OAAK,IAAMC,GAAX,IAAkBR,aAAlB,EAAiC;AAC/B;AACA,QAAIA,aAAa,CAACS,cAAd,CAA6BD,GAA7B,CAAJ,EAAuC;AACrCD,MAAAA,OAAO,CAACN,IAAI,GAAGO,GAAP,GAAaN,KAAd,CAAP,GAA8BQ,MAAM,CAACV,aAAa,CAACQ,GAAD,CAAd,CAApC;AACD;AACF,GAhBsE,CAkBvE;;;AACA,SAAOD,OAAP;AACD,CApBD","sourcesContent":["'use strict';\n\n/**\n * Wrap substitutions\n */\nmodule.exports = function wrap(substitutions, left = '{{', right = '}}') {\n\n  //Process arrays\n  if (Array.isArray(substitutions)) {\n    return substitutions.map(subs => wrap(subs, left, right));\n  }\n\n  //Initialize new wrapped object\n  const wrapped = {};\n\n  //Map substitutions and ensure string for value\n  for (const key in substitutions) {\n    //istanbul ignore else\n    if (substitutions.hasOwnProperty(key)) {\n      wrapped[left + key + right] = String(substitutions[key]);\n    }\n  }\n\n  //Return wrapped substitutions\n  return wrapped;\n};\n"]},"metadata":{},"sourceType":"script"}