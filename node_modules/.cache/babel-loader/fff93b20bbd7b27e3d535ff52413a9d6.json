{"ast":null,"code":"var _jsxFileName = \"/Users/husnainmehmood/Desktop/Work/petpawnions-admin/src/Pages/Places/DataTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Axios from \"axios\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport EditId from \"./EditId\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: \"title\",\n  label: \"Title\",\n  minWidth: 100\n}, {\n  id: \"address\",\n  label: \"Address\",\n  minWidth: 100\n}, {\n  id: \"long\",\n  label: \"Longitude\",\n  minWidth: 100\n}, {\n  id: \"lat\",\n  label: \"Latitude\",\n  minWidth: 100\n}, {\n  id: \"open\",\n  label: \"Open Time\",\n  minWidth: 100\n}, {\n  id: \"close\",\n  label: \"Close Time\",\n  minWidth: 100\n}, {\n  id: \"postal\",\n  label: \"Postal Code\",\n  minWidth: 100\n}, {\n  id: \"category\",\n  label: \"Category\",\n  minWidth: 100\n}, {\n  id: \"phone\",\n  label: \"Phone\",\n  minWidth: 100\n}, {\n  id: \"email\",\n  label: \"Email\",\n  minWidth: 100\n}, {\n  id: \"url\",\n  label: \"URL\",\n  minWidth: 100\n}, {\n  id: \"action\",\n  label: \"Actions\",\n  minWidth: 100\n}];\nexport default function StickyHeadTable(_ref) {\n  _s();\n\n  let {\n    token,\n    apiUrl,\n    search\n  } = _ref;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n  const [petPlaces, setPetPlaces] = useState([]); // EDIT DATA\n\n  const [table, setTable] = useState(true);\n  const [id, setId] = useState(\"\");\n  const [titleE, setTitleE] = useState(\"\");\n  const [addressE, setAddressE] = useState(\"\");\n  const [longituideE, setLongitudeE] = useState(\"\");\n  const [latitudeE, setLatitudeE] = useState(\"\");\n  const [startTimeE, setStartTimeE] = useState(\"\");\n  const [endTimeE, setEndTimeE] = useState(\"\");\n  const [postalCodeE, setPostalCodeE] = useState(\"\");\n  const [categoryE, setCategoryE] = useState(\"\");\n  const [phoneE, setPhoneE] = useState(\"\");\n  const [fbE, setFbE] = useState(\"\");\n  const [instaE, setInstaE] = useState(\"\");\n  const [twitterE, setTwitterE] = useState(\"\");\n  const [urlE, setUrlE] = useState(\"\");\n  const [emailE, setEmailE] = useState(\"\");\n  const placesApi = `${apiUrl}/petplace`;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  useEffect(() => {\n    Axios.get(placesApi, config).then(response => setPetPlaces(response.data));\n  }, []);\n  const filteredPlaces = petPlaces.filter(place => place.title.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredPlaces.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((place, idx) => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.long\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.lat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.start_time.substr(11, 5)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.end_time.substr(11, 5)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.postcode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.phone_number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: place.web_url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"delete\",\n                      fontSize: \"small\",\n                      color: \"error\",\n                      onClick: e => {\n                        e.preventDefault();\n                        Axios.delete(`${placesApi}/${place.id}`, {\n                          headers: {\n                            Authorization: `Bearer ${token}`\n                          }\n                        }).then(res => {\n                          console.log(res);\n                          window.location.reload(true);\n                        }).catch(err => console.log(err));\n                      },\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/places/edit-place\",\n                      style: {\n                        textDecoration: \"none\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        \"aria-label\": \"delete\",\n                        fontSize: \"small\",\n                        color: \"primary\",\n                        onClick: EditId.setId(place.id),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)]\n              }, place.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [50, 100, 150],\n        component: \"div\",\n        count: petPlaces.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"8Hg0VcPWS59Kh2ozTkyxyyYDwtw=\");\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/Users/husnainmehmood/Desktop/Work/petpawnions-admin/src/Pages/Places/DataTable.jsx"],"names":["React","useState","useEffect","Fragment","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Axios","IconButton","DeleteIcon","EditIcon","EditId","Link","columns","id","label","minWidth","StickyHeadTable","token","apiUrl","search","page","setPage","rowsPerPage","setRowsPerPage","petPlaces","setPetPlaces","table","setTable","setId","titleE","setTitleE","addressE","setAddressE","longituideE","setLongitudeE","latitudeE","setLatitudeE","startTimeE","setStartTimeE","endTimeE","setEndTimeE","postalCodeE","setPostalCodeE","categoryE","setCategoryE","phoneE","setPhoneE","fbE","setFbE","instaE","setInstaE","twitterE","setTwitterE","urlE","setUrlE","emailE","setEmailE","placesApi","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","config","headers","Authorization","get","then","response","data","filteredPlaces","filter","place","title","toLowerCase","includes","width","height","overflow","maxHeight","map","column","align","slice","idx","address","long","lat","start_time","substr","end_time","postcode","category","name","phone_number","email","web_url","e","preventDefault","delete","res","console","log","window","location","reload","catch","err","textDecoration","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Axios from \"axios\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport EditId from \"./EditId\";\nimport { Link } from \"react-router-dom\";\n\nconst columns = [\n  { id: \"title\", label: \"Title\", minWidth: 100 },\n  { id: \"address\", label: \"Address\", minWidth: 100 },\n  { id: \"long\", label: \"Longitude\", minWidth: 100 },\n  { id: \"lat\", label: \"Latitude\", minWidth: 100 },\n  { id: \"open\", label: \"Open Time\", minWidth: 100 },\n  { id: \"close\", label: \"Close Time\", minWidth: 100 },\n  { id: \"postal\", label: \"Postal Code\", minWidth: 100 },\n  { id: \"category\", label: \"Category\", minWidth: 100 },\n  { id: \"phone\", label: \"Phone\", minWidth: 100 },\n  { id: \"email\", label: \"Email\", minWidth: 100 },\n  { id: \"url\", label: \"URL\", minWidth: 100 },\n  { id: \"action\", label: \"Actions\", minWidth: 100 },\n];\n\nexport default function StickyHeadTable({ token, apiUrl, search }) {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n  const [petPlaces, setPetPlaces] = useState([]);\n\n  // EDIT DATA\n  const [table, setTable] = useState(true);\n  const [id, setId] = useState(\"\");\n  const [titleE, setTitleE] = useState(\"\");\n  const [addressE, setAddressE] = useState(\"\");\n  const [longituideE, setLongitudeE] = useState(\"\");\n  const [latitudeE, setLatitudeE] = useState(\"\");\n  const [startTimeE, setStartTimeE] = useState(\"\");\n  const [endTimeE, setEndTimeE] = useState(\"\");\n  const [postalCodeE, setPostalCodeE] = useState(\"\");\n  const [categoryE, setCategoryE] = useState(\"\");\n  const [phoneE, setPhoneE] = useState(\"\");\n  const [fbE, setFbE] = useState(\"\");\n  const [instaE, setInstaE] = useState(\"\");\n  const [twitterE, setTwitterE] = useState(\"\");\n  const [urlE, setUrlE] = useState(\"\");\n  const [emailE, setEmailE] = useState(\"\");\n\n  const placesApi = `${apiUrl}/petplace`;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  useEffect(() => {\n    Axios.get(placesApi, config).then((response) =>\n      setPetPlaces(response.data)\n    );\n  }, []);\n\n  const filteredPlaces = petPlaces.filter((place) =>\n    place.title.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <Fragment>\n      <Paper sx={{ width: \"100%\", height: \"100%\", overflow: \"hidden\" }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredPlaces\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((place, idx) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={place.id}\n                    >\n                      <TableCell>{place.title}</TableCell>\n                      <TableCell>{place.address}</TableCell>\n                      <TableCell>{place.long}</TableCell>\n                      <TableCell>{place.lat}</TableCell>\n                      <TableCell>{place.start_time.substr(11, 5)}</TableCell>\n                      <TableCell>{place.end_time.substr(11, 5)}</TableCell>\n                      <TableCell>{place.postcode}</TableCell>\n                      <TableCell>{place.category.name}</TableCell>\n                      <TableCell>{place.phone_number}</TableCell>\n                      <TableCell>{place.email}</TableCell>\n                      <TableCell>{place.web_url}</TableCell>\n                      <TableCell>\n                        <div>\n                          <IconButton\n                            aria-label=\"delete\"\n                            fontSize=\"small\"\n                            color=\"error\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              Axios.delete(`${placesApi}/${place.id}`, {\n                                headers: {\n                                  Authorization: `Bearer ${token}`,\n                                },\n                              })\n                                .then((res) => {\n                                  console.log(res);\n                                  window.location.reload(true);\n                                })\n                                .catch((err) => console.log(err));\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                          <Link\n                            to=\"/places/edit-place\"\n                            style={{ textDecoration: \"none\" }}\n                          >\n                            <IconButton\n                              aria-label=\"delete\"\n                              fontSize=\"small\"\n                              color=\"primary\"\n                              onClick={EditId.setId(place.id)}\n                            >\n                              <EditIcon />\n                            </IconButton>\n                          </Link>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[50, 100, 150]}\n          component=\"div\"\n          count={petPlaces.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}